choose(n,k)*p^k*(1-p)^(n-k)
n=1
p=0.17966455
k=0:7
dbinom(k,n,p)
siniestros=0:6
polizas=c(122618,21686,4014,832,224,68,17)
media=weighted.mean(siniestros,polizas);
varianza=sum((siniestros-media)^2*polizas)/sum(polizas)
a=media^2/(varianza-media);
b=(varianza-media)/media;
prbinomial=dnbinom(siniestros,a,1/(1+b));
prnegbinm1<-c(prnegbinm1,1-sum(prnegbinm1));
prnegbinm1<-c(prbinomial,1-sum(prbinomial));
fteonegbinm1<-prnegbinm1*sum(valfm1);
fteonegbinm1<-prnegbinm1*sum(polizas);
fteonegbinm1
fteonegbincontm1<-(fteonegbinm1[1:6],sum(fteonegbinm1[7:8]));
fteonegbincontm1<-(fteonegbinm1[1:6],sum(fteonegbinm1[7:8]));
negativabin<-function(siniestros,polizas)
media=weighted.mean(siniestros,polizas);
negativabin<-function(siniestros,polizas)
media=weighted.mean(siniestros,polizas)
varianza=sum((siniestros-media)^2*polizas)/sum(polizas)
a=media^2/(varianza-media);
b=(varianza-media)/media;
varianza=sum((siniestros-media)^2*polizas)/sum(polizas)
binomialnegativa<-function(siniestros,polizas) {media=weighted.mean(siniestros,polizas);varianza=sum((siniestros-media)^2*polizas)/sum(polizas);a=media^2/(varianza-media);}
binomialnegativa<-function(siniestros,polizas) {media=weighted.mean(siniestros,polizas);varianza=sum((siniestros-media)^2*polizas)/sum(polizas);a=media^2/(varianza-media); b=(varianza-media)/media;prbinomial=dnbinom(siniestros,a,1/(1+b));fteonegbinm1<-prnegbinm1*sum(polizas);fteonegbinm1}
View(binomialnegativa)
function(siniestros,polizas) {media=weighted.mean(siniestros,polizas);varianza=sum((siniestros-media)^2*polizas)/sum(polizas);a=media^2/(varianza-media); b=(varianza-media)/media;prbinomial=dnbinom(siniestros,a,1/(1+b));fteonegbinm1<-prnegbinm1*sum(polizas);fteonegbinm1}
siniestros(0:6);
siniestros=0:6
polizas=c(2196808,161913,10976,882,90,11,2,1)
binomialnegativa(siniestros,polizas)
polizas=c(2196808,161913,10976,882,90,11,2)
binomialnegativa(siniestros,polizas)
n=1
p=0.17966455
k=0:7
dbinom(k,n,p)
p=0.07334384
dbinom(k,n,p)
p=0.06380118
dbinom(k,n,p)
n=7
dbinom(k,n,p)
n=7
p=0.17966455
k=0:7
polizas=c(122618,21686,4014,832,224,68,17,14)
prbin<-dbinom(k,n,p)
frecteo<-prbin*sum(polizas);frecteo
transfbinomial<-funtion(n,p,k,polizas){prbin<-dbinom(k,n,p);prbin1=c(prbin,1-prbin);frecteo<-prbin1*sum(polizas)}
transfbinomial<-funtion(n,p,k,polizas){prbin<-dbinom(k,n,p);prbin1=c(prbin,1-prbin);frecteo<-prbin1*sum(polizas)}
transfbinomial<-funtion(n,p,k,polizas) {prbin<-dbinom(k,n,p);prbin1=c(prbin,1-prbin);frecteo<-prbin1*sum(polizas)}
transfbinomial<-funtion(n,p,k,polizas) {prbin<-dbinom(k,n,p);prbin1=c(prbin,1-prbin);frecteo<-prbin1*sum(polizas)}
transfbinomial<- funtion(n,p,k,polizas) {prbin<-dbinom(k,n,p);prbin1=c(prbin,1-prbin);frecteo<-prbin1*sum(polizas)}
library(ggplot2)
qplot(1:
10)
?qplot
data("mtcars")
qplot(mpg, wt, data = mtcars)
View(mtcars)
qplot(mpg, wt, data = mtcars, color = vs)
qplot(mpg, wt, data = mtcars, color = vs, geom = "path")
qplot(mpg, wt, data = mtcars, color = vs, geom = "boxplot")
qplot(mpg, wt, data = mtcars, color = vs, geom = "dotplot")
qplot(mpg, wt, data = mtcars, geom = "histogram")
qplot(mpg, data = mtcars, geom = "histogram")
library(readxl)
IBNR_1 <- read_excel("~/INTEC/Textos del 13vo/Administración Acturial/IBNR_1.xlsx")
View(IBNR_1)
find.package("devtools")
install.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
quit()
library(DCL)
install.packages("DCL")
library(DCL)
vignette(DCL)
vignette("DCL")
help(DCL)
vignette("ChainLadder")
data(package="ChainLadder")
RAA
require(ChainLadder)
data(package="ChainLadder")
RAA
ClarkCapeCod(RAA, Premium = 40000, G = "weibull")
vignette("ChainLadder")
library("TeachingDEmos")
install.packages("TeachingDemos")
library("TeachingDEmos")
library(TeachingDemos)
vignette("TeachingDemos")
vignette(TeachingDemos)
run.ci.examp()
ci.examp()
clt.examp()
clt.examp(1, 100000, nclass = 10)
clt.examp()
dots()
library("stats", lib.loc="C:/Program Files/R/R-3.4.1/library")
install.packages("tibble")
install.packages("tibble")
library(tibble)
library(plyr)
vignette(plyr)
baseball
base <- as.data.frame(baseball)
summarise(base)
summarize(base)
baberuth <- subset(base, id == "ruthba01")
View(baberuth)
View(baberuth)
View(baberuth)
View(baberuth)
baberuth$cyear <- baberuth$year - min(baberuth$year) +1
calculate_cyear <- function(df) {
mutate(df,
cyear = year - min(year),
cpercent = cyear / (max(year) - min(year))
)
}
base <- ddply(base, .(id), calculate_cyear)
View(base)
base <- subset(base, ab >= 25)
swirl()
library(swirl)
swirl()
?InstallCourses
swirl(OpenIntro)
install_course("R_Programming")
swirl()
5+7
x <- 5+7
q(9)
library("swirl")
library(swirl)
library("swirl")
installed.packages()
install.packages("swirl")
library(swirl)
install_course(Data Analysis)
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Data_Analysis")
install_course("Data_Analysis")
swirl()
setwd("C:/Users/luisv/OneDrive/Documents")
swirl()
install.packages("ggplot2")
swirl()
set.seed(2)
sample(1:71, 30, replace = FALSE)
sample(1:71, 35, replace = FALSE)
set.seed(1)
sample(1:71, 35, replace = FALSE)
source('C:/Users/luisv/OneDrive/Documents/INTEC/Textos del 13vo/Administración Acturial/TriangulaciónDeGrupos.R')
library(reshape2)
installed.packages()
install.packages("reshape2")
source('C:/Users/luisv/OneDrive/Documents/INTEC/Textos del 13vo/Administración Acturial/TriangulaciónDeGrupos.R')
Triangulargrupos()
Grupo1 <- Triangulargrupos()
plot(Grupo1$FullTriangle)
Grupo1$FullTriangle
grupo2 <- Triangulargrupos()
grupo2 <- Triangulargrupos()
grupo2
grupo2$FullTriangle
grupo2 <- Triangulargrupos()
grupo2
grupo2$FullTriangle
plot(grupo2)
plot(grupo2$FullTriangle)
grupo3 <- Triangulargrupos()
grupo3$FullTriangle
grupo3
grupo4 <- Triangulargrupos()
grupo4$FullTriangle
grupo4
plot(grupo4$FullTriangle)
grupo5 <- Triangulargrupos()
grupo5$FullTriangle
grupo5
plot(grupo5)
plot(grupo5$FullTriangle)
grupo6 <- Triangulargrupos()
grupo6$FullTriangle
grupo6
plot(grupo6$FullTriangle)
grupo7 <- Triangulargrupos()
grupo7$FullTriangle
grupo7
plot(grupo7$FullTriangle)
grupo8 <- Triangulargrupos()
grupo8$FullTriangle
grupo8
plot(grupo8$FullTriangle)
grupo9 <- Triangulargrupos()
grupo9$FullTriangle
grupo9
plot(grupo9$FullTriangle)
grupo10 <- Triangulargrupos()
grupo10$FullTriangle
grupo10
plot(grupo10$FullTriangle)
grupo11 <- Triangulargrupos()
grupo11$FullTriangle
grupo11
plot(grupo11)
plot(grupo11$FullTriangle)
grupo12 <- Triangulargrupos()
grupo12$FullTriangle
grupo12
plot(grupo12$FullTriangle)
set.seed(2)
sample(1:60,35)
Longitud_Viejas <- read.delim("clipboard")
Longitud_Viejas
numero <- read.delim("clipboard")
Mediciones <- data.frame(Numero = numero, Medicion_Viejas = Longitud_Viejas)
View(Mediciones)
Mediciones <- colnames(C("Numero", "Longitud_Vieja"))
Mediciones <- colnames(C("Numero", "Longitud_Viejas"))
Mediciones <- colnames(c("Numero", "Longitud_Viejas"))
Mediciones
Mediciones <- data.frame(Numero = numero, Medicion_Viejas = Longitud_Viejas)
numero <- read.delim("clipboard")
Mediciones <- read.delim("clipboard")
Mediciones <- data.frame(Numero = numero, Medicion_Viejas = Longitud_Viejas)
Mediciones <- data.frame(Numero = numero, Medicion_Viejas = Mediciones)
library(ggplot2)
ggplot(Mediciones, aes(Longitud,Numero)) + geom_dotplot()
ggplot(Mediciones, aes(Numero,Longitud)) + geom_dotplot()
class(Mediciones$Longitud)
qplot(Numero, Longitud, data = Mediciones, geom = "point" )
qplot(Numero, Longitud, data = Mediciones, geom = "point", colour = "red")
qplot(Numero, Longitud, data = Mediciones, geom = "point", colour = "red", main = "Mediciones del primer grupo")
qplot(Numero, Longitud, data = Mediciones, geom = "point", colour = "red", main = "Mediciones del primer grupo", legend = F)
Defectos_viejas <- read.delim("clipboard")
qplot(Defectos_viejas)
qplot(Defectos_viejas, binwidth = 10)
qplot(Defectos_viejas, binwidth = 20)
qplot(Defectos_viejas, binwidth = 30)
qplot(Defectos_viejas)
Defectos_viejas
ggplot(Defectos_viejas, aes(Defectos)) + geom_bar(binwidth = 40)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(binwidth = 40)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(binwidth = 20)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram()
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 40)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 200)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 0.01)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 1)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 2)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 3)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 3)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 4)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 5)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 6)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, colour = "red")
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = "blue")
palette()
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = "cyan")
rainbow()
rainbow(10)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = "#00FFFFFF")
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = rainbow(4))
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = rainbow(1))
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = rainbow(1))
set.seed(10)
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = rainbow(1))
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = heat.colors(1))
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = "green3")
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = "green3") + ylab("Frecuencia")
ggplot(Defectos_viejas, aes(Defectos)) + geom_histogram(bins = 7, fill = "green3", main = "Numero de defectos") + ylab("Frecuencia")
ggplot(Defectos_viejas, aes(Defectos), main = "Numero de defectos") + geom_histogram(bins = 7, fill = "green3", main = "Numero de defectos") + ylab("Frecuencia")
ggplot(Defectos_viejas, aes(Defectos), main = "Numero de defectos") + geom_histogram(bins = 7, fill = "green3", main = "Numero de defectos") + ylab("Frecuencia") + ggtitle("Cantidad de defectos")
install.packages("shiny")
library(shiny)
runExample("01_hello")
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
runApp('R/Shiny/downloads/code/01-template.R')
install.packages("xlsx")
install.packages("XLConnect")
vignette("XLConnect")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
URL1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
setwd("C:/Users/luisv/OneDrive/Documents/R/Getting and cleaning data - John Jopkins")
setwd("C:/Users/luisv/OneDrive/Documents/R/Getting and cleaning data - John Jopkins/Getting-and-cleaning-data")
data1 <- download.file(URL1,data1)
data1 <- download.file(URL1)
data1 <- download.file(URL1, "data")
data1 <- read.table(choose.files())
View(data1)
data1 <- read.table(choose.files(), sep = ",", header = T)
View(data1)
data1[data1$VAL => 1000000,] -> pricey
data1[data1$VAL > 999999,] -> pricey
View(pricey)
URL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(URL2, "data2")
read.csv(choose.files(), header = T)
dat <- read.table(choose.files(), header = T, sep = ",")
install.packages("readxl")
library(readxl)
dat <- read_excel(file.choose())
View(dat)
dat <- read_excel(file.choose(), header = TRUE)
dat <- read_excel(file.choose(), col_types = "text", range = 18:23, skip = 6)
dat <- read_excel(file.choose(), col_types = "text", range = "18:23", skip = "6")
View(dat)
library(xlsx)
install.packages("rJava")
library(rJava)
version
update()
update.default()
